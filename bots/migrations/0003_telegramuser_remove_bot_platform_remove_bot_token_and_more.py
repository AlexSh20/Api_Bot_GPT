# Generated by Django 5.2.5 on 2025-08-28 15:45

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bots', '0002_bot_platform_bot_token'),
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField(help_text='Уникальный ID пользователя в Telegram', unique=True, verbose_name='Telegram ID')),
                ('username', models.CharField(blank=True, max_length=100, null=True, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Фамилия')),
                ('is_bot', models.BooleanField(default=False, verbose_name='Это бот')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Пользователь Telegram',
                'verbose_name_plural': 'Пользователи Telegram',
                'ordering': ['-created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='bot',
            name='platform',
        ),
        migrations.RemoveField(
            model_name='bot',
            name='token',
        ),
        migrations.AddField(
            model_name='bot',
            name='gpt_api_key',
            field=models.CharField(blank=True, default='', help_text='API ключ для OpenAI (если пустой, используется глобальный)', max_length=255, verbose_name='OpenAI API ключ'),
        ),
        migrations.AddField(
            model_name='bot',
            name='gpt_model',
            field=models.CharField(default='gpt-3.5-turbo', help_text='Модель GPT для использования', max_length=50, verbose_name='GPT модель'),
        ),
        migrations.AddField(
            model_name='bot',
            name='max_tokens',
            field=models.IntegerField(default=1000, help_text='Максимальное количество токенов в ответе', verbose_name='Максимум токенов'),
        ),
        migrations.AddField(
            model_name='bot',
            name='system_prompt',
            field=models.TextField(default='Ты полезный AI-ассистент. Отвечай дружелюбно и помогай пользователям.', help_text='Инструкция для GPT о том, как себя вести', verbose_name='Системный промпт'),
        ),
        migrations.AddField(
            model_name='bot',
            name='telegram_token',
            field=models.CharField(blank=True, default='', help_text='API токен Telegram бота', max_length=255, verbose_name='Telegram токен'),
        ),
        migrations.AddField(
            model_name='bot',
            name='temperature',
            field=models.FloatField(default=0.7, help_text='Креативность ответов (0.0-1.0)', verbose_name='Температура'),
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('messages', models.JSONField(default=list, help_text='История сообщений в формате OpenAI', verbose_name='Сообщения')),
                ('total_tokens', models.IntegerField(default=0, help_text='Общее количество использованных токенов', verbose_name='Всего токенов')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Последняя активность')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='bots.bot', verbose_name='Бот')),
                ('telegram_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='bots.telegramuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Диалог',
                'verbose_name_plural': 'Диалоги',
                'ordering': ['-last_activity'],
                'unique_together': {('bot', 'telegram_user')},
            },
        ),
    ]
